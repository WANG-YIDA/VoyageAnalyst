# VoyageAnalyst

AI-powered Streamlit app that embeds a Power BI report and provides an AI analyst chat for actionable insights over a reference maritime dataset.

## Features
- Power BI embedding via service principal (with auto token generation) or a fallback sample iframe.
- AI Analyst chat that:
  - Loads the provided CSV dataset as context.
  - Uses a structured system prompt (config.py) to guide analysis.
  - Maintains short conversation context.
- Simple local run with environment variables.

## Requirements
- Python 3.9+
- pip
- Power BI workspace and report (for live embedding), or use the provided fallback iframe.

## Quick Start

### 1) Install dependencies
```bash
pip install streamlit pandas requests msal
```

### 2) Configure environment variables

Required for Power BI embedding:
- PBI_CLIENT_ID
- PBI_CLIENT_SECRET
- PBI_TENANT_ID
- PBI_WORKSPACE_ID
- PBI_REPORT_ID
- HACKATHON_API_KEY

Windows (PowerShell – current session):
```powershell
$env:PBI_CLIENT_ID="<your-client-id>"
$env:PBI_CLIENT_SECRET="<your-client-secret>"
$env:PBI_TENANT_ID="<your-tenant-id>"
$env:PBI_WORKSPACE_ID="<your-workspace-id>"
$env:PBI_REPORT_ID="<your-report-id>"
$env:HACKATHON_API_KEY="<your-api-key>"
```

Windows (PowerShell – persist for new shells):
```powershell
setx PBI_CLIENT_ID "<your-client-id>"
setx PBI_CLIENT_SECRET "<your-client-secret>"
setx PBI_TENANT_ID "<your-tenant-id>"
setx PBI_WORKSPACE_ID "<your-workspace-id>"
setx PBI_REPORT_ID "<your-report-id>"
setx HACKATHON_API_KEY "<your-api-key>"
# Restart PowerShell after this
```

macOS/Linux (current shell):
```bash
export PBI_CLIENT_ID="<your-client-id>"
export PBI_CLIENT_SECRET="<your-client-secret>"
export PBI_TENANT_ID="<your-tenant-id>"
export PBI_WORKSPACE_ID="<your-workspace-id>"
export PBI_REPORT_ID="<your-report-id>"
export HACKATHON_API_KEY="<your-api-key>"
```


Security note:
- Never commit real secrets to version control. If secrets were previously committed, rotate them immediately and purge history if needed.

### 4) Run the app
```bash
streamlit run app.py
```
Open the URL printed by Streamlit (usually http://localhost:8501).

- If Power BI variables are set and valid, the report embeds automatically.
- If not set, the app shows a fallback sample iframe.
- You can paste HACKATHON_API_KEY in the app if not set as an environment variable.

## How it works

- Data context:
  - app.py loads reference_sample_data.csv and converts it to markdown (cached).
  - The dataset is injected into the system prompt from config.py (SYSTEM_PROMPT_TEMPLATE).
- AI Analyst:
  - Calls the PSA Code Sprint gateway:
    - POST https://psacodesprint2025.azure-api.net/openai/deployments/gpt-4.1-nano/chat/completions?api-version=2025-01-01-preview
    - Sends recent conversation window + system prompt.
  - HACKATHON_API_KEY is required (env var or typed into the UI).
- Power BI embedding:
  - If PBI_EMBED_TOKEN is not provided, the app uses MSAL to acquire an AAD token and requests an embed token from Power BI:
    - Scopes: https://analysis.windows.net/powerbi/api/.default
    - Endpoints:
      - GET https://api.powerbi.com/v1.0/myorg/groups/{groupId}/reports/{reportId}
      - POST https://api.powerbi.com/v1.0/myorg/groups/{groupId}/reports/{reportId}/GenerateToken
  - The report is embedded using powerbi-client in the browser.
  - If config is missing, the app falls back to a sample iframe URL.

## Power BI prerequisites (service principal)
- Azure AD app registration with:
  - Application (client) ID and client secret.
- Power BI admin:
  - Enable “Service principals can use Power BI APIs”.
  - Grant the service principal access to the workspace.
- Workspace:
  - Obtain Workspace (Group) ID and Report ID.

## Project structure (minimal)
- app.py — Streamlit UI, AI calls, and Power BI embed logic
- config.py — SYSTEM_PROMPT_TEMPLATE used by the AI
- reference_sample_data.csv — dataset loaded into the AI context
- README.md — this file

## Troubleshooting
- “Data file not found”: Ensure reference_sample_data.csv is in the project root (same folder as app.py).
- “Missing dependencies”: pip install streamlit pandas requests msal
- “Could not generate embed token”:
  - Verify all PBI_* env vars.
  - Confirm the service principal has workspace access and admin settings are enabled.
- “HTTP error occurred” from AI:
  - Check HACKATHON_API_KEY is set and valid.
  - Verify network access to the gateway endpoint.

## Security
- Rotate any credentials that were previously checked into git.
- Prefer environment variables for local development and a secrets manager (e.g., Azure Key Vault) for production.
